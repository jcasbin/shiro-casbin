name: build

env:
  CI: true

on: [ push, pull_request ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: casbin_test
          MYSQL_DATABASE: casbin
          MYSQL_USER: casbin_test
          MYSQL_PASSWORD: TEST_casbin
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgres:
        image: postgres
        env:
          POSTGRES_DB: casbin
          POSTGRES_USER: casbin_test
          POSTGRES_PASSWORD: TEST_casbin
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: 9G3iqmzQDw9zCXII
          ACCEPT_EULA: Y
        ports:
          - 1433:1433
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          server-id: ossrh
          server-username: OSSRH_JIRA_USERNAME
          server-password: OSSRH_JIRA_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY_ASCII }}
          gpg-passphrase: GPG_PASSPHRASE

      # - name: Setup docker
      #   uses: docker-practice/actions-setup-docker@v1
      # - name: mysql
      #   run: |
      #     mysql -e 'CREATE DATABASE casbin;'
      #     mysql -e "CREATE USER 'casbin_test'@'localhost' IDENTIFIED BY 'TEST_casbin';"
      #     mysql -e "GRANT ALL ON casbin.* TO 'casbin_test'@'localhost';"

      # - name: sql-server
      #   run: |
      #     sudo docker run --name=mssql-server-linux-latest -e 'ACCEPT_EULA=Y' -e 'MSSQL_SA_PASSWORD=9G3iqmzQDw9zCXII' -p 1433:1433 -d mcr.microsoft.com/mssql/server:2017-latest
      #     sudo docker exec -it mssql-server-linux-latest /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P '9G3iqmzQDw9zCXII' -Q "CREATE DATABASE casbin"

      - name: Build with Maven
        run: mvn clean test cobertura:cobertura

      - name: Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20

      - name: Semantic Release
        run: |
          npm install -g @conveyal/maven-semantic-release semantic-release
          semantic-release --prepare @conveyal/maven-semantic-release --publish @semantic-release/github,@conveyal/maven-semantic-release --verify-conditions @semantic-release/github,@conveyal/maven-semantic-release --verify-release @conveyal/maven-semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GPG_KEY_NAME: ${{ secrets.GPG_KEY_NAME }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PRIVATE_KEY_PASSWORD }}
          OSSRH_JIRA_USERNAME: ${{ secrets.OSSRH_JIRA_USERNAME }}
          OSSRH_JIRA_PASSWORD: ${{ secrets.OSSRH_JIRA_PASSWORD }}